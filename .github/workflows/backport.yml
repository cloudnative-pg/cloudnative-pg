name: pull_request_backport
on:
  pull_request_target:
    types:
      - closed
      - opened
      - reopened
    branches:
      - main

jobs:
  # Label the source pull request with 'backport-requested' and all supported releases label, the goal is, by default
  # we backport everything
  label-source-pr:
    name: label the source pr
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-20.04
    steps:
      -
        name: label the pull request
        uses: actions-ecosystem/action-add-labels@v1.1.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          number:  ${{ github.event.pull_request.number }}
          labels: |
            backport-requested
            release-1.16
            release-1.17
      -
        name: Create comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
              By default, the pull request is supposed to backport all release branches.
              Add 'backport-requested' and all release branches label to pull request.
          reactions: heart

  ## backport pull request in condition when pr contains 'backport-requested' label and contains target branches labels
  back-porting-pr:
    name: backport to release branches
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'backport-requested')
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        branch:
          -  release-1.16
          -  release-1.17
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Check labels
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR: ${{ github.event.pull_request.number }}
        run: |
          label=$(gh pr view ${PR} --json labels -q ".labels.[].name" 2>/dev/null | grep ${{ matrix.branch }} || :)
          echo "LABEL=${label}" >> $GITHUB_ENV
          echo "PR=${{steps.findPr.outputs.pr}}" >> $GITHUB_ENV
          echo "find label ${label} in pull request ${PR}"
          commit=$(gh pr view ${PR} --json mergeCommit -q ".mergeCommit.oid" 2>/dev/null || :)
          echo "COMMIT=${commit}" >> $GITHUB_ENV
          echo "cherry-pick commit ${commit} to branch ${{ matrix.branch }}"
          author_name=$(git show -s --format='%an' "${commit}")
          echo "AUTHOR_NAME=${author_name}" >> $GITHUB_ENV
          author_email=$(git show -s --format='%ae' "${commit}")
          echo "AUTHOR_EMAIL=${author_email}" >> $GITHUB_ENV
      -
        name: Configure git user
        if: |
          env.LABEL != '' &&
          env.COMMIT != '' &&
          env.LABEL == matrix.branch
        run: |
          git config user.email "${{ env.AUTHOR_EMAIL }}"
          git config user.name "${{ env.AUTHOR_NAME }}"
      -
        name: cherry pick
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR: ${{ github.event.pull_request.number }}
        run: |
           git fetch
           git checkout -B ${{ matrix.branch }} origin/${{ matrix.branch }} -t -f
           git checkout -B cherry-pick-${{ matrix.branch }}-${PR}-${{ env.COMMIT }} -f
           git cherry-pick -x --allow-empty-message --mainline 1 ${{ env.COMMIT }}
           git push origin cherry-pick-${{ matrix.branch }}-${PR}-${{ env.COMMIT }}:cherry-pick-${{ matrix.branch }}-${PR}-${{ env.COMMIT }}
      -
        name: create pull request
        uses: devops-infra/action-pull-request@v0.5.2
        if: |
          success() &&
          env.COMMIT != ''
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: cherry-pick-${{ matrix.branch }}-${{ env.PR }}-${{ env.COMMIT }}
          target_branch: ${{ matrix.branch }}
          title: "chore(backport): backport pull request ${{ env.PR }} to branch ${{ matrix.branch }}"
          body: "This is a backport pull request, use rebase and merge to keep the original information"
          label: backport,do not squash


