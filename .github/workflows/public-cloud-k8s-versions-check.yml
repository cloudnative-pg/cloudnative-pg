name: public-cloud-k8s-versions-check
on:
  schedule:
    - cron: "30 0 * * *"
  workflow_dispatch:
    inputs:
      limit:
        description: 'Limit to the specified engines list (eks, aks, gke)'
        required: false

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

jobs:

  check-public-clouds-k8s-versions:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2.3.5
      -
        # There is no command to get EKS k8s versions, we have to parse the documentation
        name: Get updated EKS versions
        run: |
          DOC_URL="https://raw.githubusercontent.com/awsdocs/amazon-eks-user-guide/master/doc_source/kubernetes-versions.md" #wokeignore:rule=master
          curl --silent "${DOC_URL}" | grep -E '^\+ [0-9]\\\.[0-9]{2}\\\.[0-9]' | sed -e 's/[\ +]//g; s/\.[1-9]\+$//' | \
            grep -v '^1.1[67]' | \
            jq -Rn '[inputs]' > .github/eks_versions.json
        if: github.event.inputs.limit == null || github.event.inputs.limit == 'eks'
      -
        name: Azure Login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        if: github.event.inputs.limit == null || github.event.inputs.limit == 'aks'
      -
        name: Get updated AKS versions
        run: |
          az aks get-versions --location westeurope --query 'reverse(sort(orchestrators[? isPreview != `true`].orchestratorVersion))' -o tsv | sort -urk 1,1.5 | \
            jq -Rn '[inputs]' > .github/aks_versions.json
        if: github.event.inputs.limit == null || github.event.inputs.limit == 'aks'
      -
        name: Set up Cloud SDK for GKE
        uses: google-github-actions/setup-gcloud@master #wokeignore:rule=master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          export_default_credentials: true
        if: github.event.inputs.limit == null || github.event.inputs.limit == 'gke'
      -
        name: Install YQ
        uses: chrisdickinson/setup-yq@latest
        with:
          yq-version: v4.6.3
        if: github.event.inputs.limit == null || github.event.inputs.limit == 'gke'
      -
        name: Get updated GKE versions
        run: |
          # Get the valid major versions from all the channels, convert them
          # to json and write them to file.
          YQEXPR=".validMasterVersions" #wokeignore:rule=master
          gcloud container get-server-config --zone europe-west3-a --quiet | \
          yq e ${YQEXPR} - | \
          cut -d'.' -f '1-2' | \
          uniq | \
          sed 's/\([[:digit:]]\+\.[[:digit:]]\+\)/"\1"/' | \
          yq -j e - > .github/gke_versions.json
        if: github.event.inputs.limit == null || github.event.inputs.limit == 'gke'
      -
        name: Create Pull Request if public clouds k8s versions have been updated
        uses: gr2m/create-or-update-pull-request-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: "Public Cloud K8S versions update"
          body: "Update the versions used to test the operator on public cloud providers"
          branch: "k8s-cloud-versions-update"
          author: "public-cloud-k8s-versions-check <public-cloud-k8s-versions-check@users.noreply.github.com>"
          path: ".github/"
          commit-message: "Updated public cloud k8s tested versions"
