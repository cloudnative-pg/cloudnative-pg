apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Auto Pilot
    categories: Database
    operators.operatorframework.io/project_layout: ""
    description: CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.
    certified: "true"
    createdAt:
    containerImage: $(OPERATOR_IMAGE_NAME)
    repository: https://github.com/cloudnative-pg/cloudnative-pg
    support: Community
    olm.skipRange: '>= 1.18.0 < ${VERSION}'
    features.operators.openshift.io/disconnected: "true"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "false"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
  labels:
    operatorframework.io/arch.amd64: supported
  name: cloudnative-pg.v0.0.0
  namespace: placeholder
spec:
  displayName: CloudNativePG
  description: |
    Main features:

    * Direct integration with Kubernetes API server for High Availability,
      without requiring an external tool
    * Self-Healing capability, through:
        * failover of the primary instance by promoting the most aligned replica
        * automated recreation of a replica
    * Planned switchover of the primary instance by promoting a selected replica
    * Scale up/down capabilities
    * Definition of an arbitrary number of instances (minimum 1 - one primary server)
    * Definition of the *read-write* service, to connect your applications to the only primary server of the cluster
    * Definition of the *read-only* service, to connect your applications to any of the instances for reading workloads
    * Declarative management of PostgreSQL configuration
    * Declarative management of Postgres roles, users and groups
    * Support for Local Persistent Volumes with PVC templates
    * Reuse of Persistent Volumes storage in Pods
    * Separate volume for WAL files
    * Rolling updates for PostgreSQL minor versions
    * In-place or rolling updates for operator upgrades
    * TLS connections and client certificate authentication
    * Support for custom TLS certificates (including integration with cert-manager)
    * Continuous WAL archiving to an object store (AWS S3 and S3-compatible, Azure Blob Storage, and Google Cloud Storage)
    * Backups on volume snapshots (where supported by the underlying storage classes)
    * Backups on object stores (AWS S3 and S3-compatible, Azure Blob Storage, and Google Cloud Storage)
    * Full recovery and Point-In-Time recovery from an existing backup on volume snapshots or object stores
    * Offline import of existing PostgreSQL databases, including major upgrades of PostgreSQL
    * Fencing of an entire PostgreSQL cluster, or a subset of the instances in a declarative way
    * Hibernation of a PostgreSQL cluster in a declarative way
    * Support for Synchronous Replicas
    * Support for HA physical replication slots at cluster level
    * Backup from a standby
    * Backup retention policies (based on recovery window, only on object stores)
    * Parallel WAL archiving and restore to allow the database to keep up with WAL
      generation on high write systems
    * Support tagging backup files uploaded to an object store to enable optional
      retention management at the object store layer Replica clusters for
    * PostgreSQL deployments across multiple Kubernetes
      clusters, enabling private, public, hybrid, and multi-cloud architectures
    * Connection pooling with PgBouncer
    * Support for node affinity via `nodeSelector`
    * Native customizable exporter of user defined metrics for Prometheus through the `metrics` port (9187)
    * Standard output logging of PostgreSQL error messages in JSON format
    * Automatically set `readOnlyRootFilesystem` security context for pods
    * `cnpg` plugin for `kubectl`
    * Simple bind and search+bind LDAP client authentication
    * Multi-arch format container images

  install:
    spec:
      deployments: null
    strategy: ""
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - postgresql
  - postgres
  - database
  - sql
  - cloudnativepg
  - cloudnative-pg
  - cnpg
  # This version should be keep as low as this one or at least satisfy the version
  # that we have here https://github.com/redhat-openshift-ecosystem/community-operators-pipeline/blob/ci/latest/ci/scripts/opp.sh#L19
  # If we change this, the kiwi test will fail
  minKubeVersion: 1.23.0
  links:
  - name: CloudNativePG
    url: https://cloudnative-pg.io/
  - name: Documentation
    url: https://cloudnative-pg.io/docs/
  maintainers:
    - email: jonathan.gonzalez@enterprisedb.com
      name: Jonathan Gonzalez V.
    - email: john.long@enterprisedb.com
      name: John Long
    - email: gabriele.bartolini@enterprisedb.com
      name: Gabriele Bartolini
  maturity: stable
  provider:
    name: The CloudNativePG Contributors
  replaces: 'cloudnative-pg.${REPLACE_VERSION}'
  icon:
  - base64data: 
    mediatype: image/svg+xml
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Backup
      name: backups.postgresql.cnpg.io
      displayName: Backups
      description: PostgreSQL backup (physical base backup)
      resources:
      - kind: PersistentVolumeClaim
        name: ''
        version: v1
      version: v1
      specDescriptors:
      - path: cluster
        displayName: Cluster
        description: The cluster to backup
      - path: cluster.name
        displayName: Cluster Name
        description: The name of the cluster to backup
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:Clusters'
      statusDescriptors:
      - displayName: Phase
        description: Current backupphase
        path: phase
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes.phase'
    - kind: Cluster
      name: clusters.postgresql.cnpg.io
      version: v1
      displayName: Cluster
      description: PostgreSQL cluster (primary/standby architecture)
      resources:
      - kind: Service
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      - kind: Secret
        name: ''
        version: v1
      - kind: PersistentVolumeClaim
        name: ''
        version: v1
      - kind: Job
        name: ''
        version: v1
      specDescriptors:
      - path: description
        displayName: Description
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: imageName
        displayName: Image Name
        description: Name of the PostgreSQL container image
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: imagePullPolicy
        displayName: ImagePullPolicy
        description: When to pull the image
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:imagePullPolicy'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: postgresUID
        displayName: Postgres UID
        description: Postgres user Id used inside the container
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:hidden'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: postgresGID
        displayName: Postgres GID
        description: Postgres group Id used inside the container
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:hidden'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: instances
        displayName: Instances
        description: Number of instances required in the cluster
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:podCount'
      - path: minSyncReplicas
        displayName: Min Synchronous Replicas
        description: Minimum number of instances required in synchronous replication with the primary. Undefined or 0 allow writes to complete when no standby is available.
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:number'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: maxSyncReplicas
        displayName: Max Synchronous Replicas
        description: The target value for the synchronous replication quorum, that can be decreased if the number of ready standbys is lower than this. Undefined or 0 disable synchronous replication.
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:number'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: postgresql
        displayName: PostgreSQL Configuration
        description: Options for postgresql.conf
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: postgresql.parameters[0]
        displayName: PostgreSQL configuration parameter
        description: Options for postgresql.conf
      - path: postgresql.pg_hba[0]
        displayName: pg_hba rules
        description: PostgreSQL Host Based Authentication rules
      - path: postgresql.epas.audit
        displayName: EPAS Configuration
        description: Boolean to enable edb_audit logging
      - path: postgresql.promotionTimeout
        displayName: pgctl Timeout
        description: maximum number of seconds to wait when promoting an instance to primary
      - path: postgresql.shared_preload_libraries[0]
        displayName: Preload Libraries
        description: List of shared preload libraries to add to the default ones
      - path: postgresql.ldap
        displayName: LDAP Authentication configuration
        description: Options to specify LDAP configuration
      - path: postgresql.ldap.server
        displayName: LDAP Server hostname or IP Address
        description: The IP or hostname of your LDAP server
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
      - path: postgresql.ldap.port
        displayName: LDAP Server port
        description: The port of your LDAP server
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
      - path: postgresql.ldap.scheme
        displayName: LDAP scheme to be used
        description: LDAP scheme
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:select:ldap'
          - 'urn:alm:descriptor:com.tectonic.ui:select:ldaps'
      - path: postgresql.ldap.tls
        displayName: Enable LDAP over TLS
        description: Boolean to enable TLS
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - path: bootstrap
        displayName: Bootstrap Configuration
        description: Instructions to bootstrap the cluster
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: bootstrap.initdb.secret.name
        displayName: Bootstrap Configuration Secret Name
        description: The name of the Bootstrap secret
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:Secret'
      - path: replica
        displayName: Replica
        description: Replica cluster configuration
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:Secret'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: superuserSecret
        displayName: Superuser Secret
        description: |
          The secret containing the superuser password.
          If not defined a new secret will be created with a randomly generated password
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: superuserSecret.name
        displayName: Superuser Secret
        description: Name of hte Superuser Secret
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:Secret'
      - path: enableSuperuserAccess
        displayName: Enable Super User Access
        description: Boolean to enable or disable use of SuperUserSecret to update postgres user password
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: certificates
        displayName: Certificates
        description: The configuration for the CA and related certificates
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: imagePullSecrets[0].name
        displayName: Image Pull Secret
        description: Secret for pulling the image. If empty, no secret will be used
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:Secret'
      - path: storage
        displayName: Storage
        description: Configuration of the storage of the instances
      - displayName: Storage Class
        path: storage.storageClass
        description: StorageClass to use for database data (PGDATA).
          Applied after evaluating the PVC template, if available.
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:StorageClass'
      - displayName: Storage Size
        path: storage.size
        description: Storage size for database data (PGDATA).
          (default size 1G)
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
      - path: walStorage
        displayName: WAL Storage
        description: Configuration of the WAL Storage of instances
      - displayName: WAL Storage Size
        path: walStorage.size
        description: Storage size for WAL Storage.
          (default size 1G)
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
      - path: storage.resizeInUseVolumes
        displayName: Resize in-use volumes
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - displayName: PVC template
        description: Template to be used to generate the Persistent Volume Claim
        path: storage.pvcTemplate
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: startDelay
        displayName: Maximum Start Delay
        description: The time in seconds that is allowed for a PostgreSQL instance
          to successfully start up (default 30)
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:number'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: stopDelay
        displayName: Maximum Stop Delay
        description: The time in seconds that is allowed for a PostgreSQL instance
          node to gracefully shutdown (default 30)
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:number'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: affinity
        displayName: Pod Affinity
        description: Affinity/Anti-affinity rules for Pods
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: affinity.enablePodAntiAffinity
        displayName: Pod Anti-Affinity
        description: activates anti-affinity for the pods
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - path: affinity.nodeSelector
        displayName: Node Selector
        description: Key value pair of which nodes the pods can run
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Node'
      - path: resources
        display: Resources
        description:
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
      - path: primaryUpdateStrategy
        displayName: Primary Update Strategy
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: primaryUpdateMethod
        displayName: Primary Update Method
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: backup.barmanObjectStore.endpointURL
        displayName: Object Storage Endpoint
        description: S3-compatible object storage Endpoint. If empty the S3 default is used
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
      - path: backup.barmanObjectStore.s3Credentials.secretAccessKey.name
        display: Secret Access Key name
        description: Name of the Secret containing the Secret Access Key
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:Secret'
      - path: backup.barmanObjectStore.s3Credentials.secretAccessKey.key
        display: Secret Access Key key
        description: Key inside the Secret containing the Secret Access Key
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
      - path: backup.barmanObjectStore.s3Credentials.accessKeyId.name
        display: Access Key Id name
        description: Name of the Secret containing the Access Key Id
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:Secret'
      - path: backup.barmanObjectStore.s3Credentials.accessKeyId.key
        display: Access Key Id key
        description: Key inside the Secret containing the Access Key Id
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
      - path: backup.barmanObjectStore.wal.compression
        displayName: WAL compression
        description: WAL compression algorithm
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
      - path: backup.barmanObjectStore.wal.encryption
        displayName: WAL encryption
        description: WAL encryprion algorithm
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
      - path: backup.barmanObjectStore.data.compression
        displayName: Data compression
        description: Data compression algorithm
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
      - path: backup.barmanObjectStore.data.encryption
        displayName: Data encryption
        description: Data encryprion algorithm
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
      - path: backup.barmanObjectStore.data.immediateCheckpoint
        displayName: Immediate Checkpoint
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - path: backup.barmanObjectStore.data.jobs
        displayName: Jobs
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:number'
      - path: nodeMaintenanceWindow.inProgress
        displayName: In Progress
        description: Maintenance window for Kubernetes node upgrades is in progress
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - path: nodeMaintenanceWindow.reusePVC
        displayName: Kubernetes Node Upgrade Maintenance Window to reuse PVCs
        description: Should the existing PVCs be reused during Kubernetes upgrades?
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - path: monitoring
        displayName: Monitoring
        description: The configuration of the monitoring infrastructure of this cluster
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: monitoring.customQueriesConfigMap[0].name
        displayName: Custom queries ConfigMap name
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:ConfigMap'
      - path: monitoring.customQueriesConfigMap[0].key
        displayName: Custom queries ConfigMap key
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
      - path: monitoring.customQueriesSecret[0].name
        displayName: Custom queries Secret name
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:Secret'
      - path: monitoring.customQueriesSecret[0].key
        displayName: Custom queries Secret key
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
      - path: monitoring.enablePodMonitor
        displayName: Enable PodMonitor resource
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - path: externalClusters
        displayName: External Clusters
        description: List of external clusters which are used in the configuration
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: logLevel
        displayName: Log Level
        description: One of error, info (default), debug or trace
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      statusDescriptors:
      - displayName: Working Pods
        description: Status Pods
        path: instancesStatus
        x-descriptors:
        - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
      - displayName: Current Primary Pod
        description: Current Primary Pod
        path: currentPrimary
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes:Pod'
      - displayName: Current Primary election date
        description: Shows the date when the current primary was elected
        path: currentPrimaryTimestamp
        x-descriptors:
        - 'urn:alm:descriptor:text'
      - displayName: Write Service
        description: Service for written process
        path: writeService
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes:Service'
      - displayName: Read Service
        description: Service for read process
        path: readService
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes:Service'
      - displayName: Phase
        description: Current cluster phase
        path: phase
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes.phase'
      - displayName: Phase Reason
        description: Current phase reason
        path: phaseReason
        x-descriptors:
        - 'urn:alm:descriptor:io.kubernetes.phase:reason'
      - path: postgresUID
        displayName: Postgres UID
        description: Postgres user Id used inside the container
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:hidden'
      - path: postgresGID
        displayName: Postgres GID
        description: Postgres group Id used inside the container
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:hidden'
      - path: conditions
        displayName: Cluster Condition
        description: Show the current condition of the cluster
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes.conditions'
    - kind: Pooler
      name: poolers.postgresql.cnpg.io
      displayName: Pooler
      description: Pooler for a Postgres Cluster (with PgBouncer)
      version: v1
      resources:
      - kind: Service
        name: ''
        version: v1
      - kind: Deployment
        name: ''
        version: v1
      specDescriptors:
      - path: cluster
        displayName: Cluster
        description: The cluster behind the pooler
      - path: cluster.name
        displayName: Cluster Name
        description: Name of the cluster behind the pooler
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
      - path: type
        description: Service type of the cluster to connect to ('rw' or 'rw')
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
      - path: instances
        displayName: Instances
        description: Number of instances required in the cluster.
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:podCount'
      - path: template
        description: Pod Template Spec for pod to be created.
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: pgbouncer
        description: The PgBouncer configuration
        displayName: PgBouncer
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: pgbouncer.poolMode
        displayName: PgBouncer PoolMode
        description: The poolmode to use. One of 'session' or 'transaction'.
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:text'
      - path: pgbouncer.authQuerySecret
        displayName: PgBouncer AuthQuerySecret
        description: The secret containing the credentials of the user that needs to
          be used for the authentication query. An AuthQuery must also be specified.
      - path: pgbouncer.authQuerySecret.name
        displayName: PgBouncer AuthQuerySecret Name
        description: The name of the secret containing the credentials of the user that needs to
          be used for the authentication query.
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
      - path: pgbouncer.authQuery
        displayName: PgBouncer AuthQuery
        description: The query that will be used to download the hashed password of a certain user.
          When this is specified an AuthQuerySecret must also be specified.
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
      - path: pgbouncer.paused
        displayName: Paused
        description: Boolean to pause PgBouncer causing it to disconnect from the PostgreSQL server.
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      statusDescriptors:
      - path: secrets.serverTLS.name
        description: The name of the secret for server TLS
      - path: secrets.serverCA.name
        description: The name of the CA secret for the server
      - path: secrets.clientCA.name
        description: The name of the CA secret for the client
      - path: secrets.pgBouncerSecrets.authQuery.name
        description: The authQuery secret
    - kind: ScheduledBackup
      name: scheduledbackups.postgresql.cnpg.io
      displayName: Scheduled Backups
      description: Backup scheduler for a given Postgres cluster
      version: v1
      resources:
      - kind: PersistentVolumeClaim
        name: ''
        version: v1
      specDescriptors:
      - path: cluster
        displayName: Cluster
        description: The PostgreSQL cluster to backup
      - path: cluster.name
        description: The name of the PostgreSQL cluster to backup
        displayName: Cluster name
        x-descriptors:
          - 'urn:alm:descriptor:io.kubernetes:Clusters'
      - path: immediate
        description: Whether the first backup needs to be taken immediately after this object is created
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - path: schedule
        displayName: Schedule
        description: The schedule in Kubernetes CronJobs format, see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
      - path: suspend
        displayName: Schedule is suspended
        description: If this is true, the schedule is suspended (defaults to `False`)
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      statusDescriptors:
      - displayName: Next backup
        description: When the next backup is scheduled
        path: nextScheduleTime
      - displayName: Last backup
        description: When the last backup was scheduled
        path: lastScheduleTime

    - kind: ImageCatalog
      name: imagecatalogs.postgresql.cnpg.io
      displayName: Image Catalog
      description: A catalog of PostgreSQL operand images
      version: v1
      resources:
      - kind: ConfigMap
        name: ''
        version: v1
      specDescriptors:
      - path: images
        displayName: Images
        description: images
      - path: images.image
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
    - kind: ClusterImageCatalog
      name: clusterimagecatalogs.postgresql.cnpg.io
      displayName: Cluster Image Catalog
      description: A cluster-wide catalog of PostgreSQL operand images
      version: v1
      resources:
      - kind: ConfigMap
        name: ''
        version: v1
      specDescriptors:
      - path: images
        displayName: images
        description: images
      - path: images.image
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:text'
