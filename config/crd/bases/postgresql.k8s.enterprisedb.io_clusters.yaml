
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: clusters.postgresql.k8s.enterprisedb.io
spec:
  group: postgresql.k8s.enterprisedb.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Number of instances
      jsonPath: .status.instances
      name: Instances
      type: integer
    - description: Number of ready instances
      jsonPath: .status.readyInstances
      name: Ready
      type: integer
    - description: Cluster current status
      jsonPath: .status.phase
      name: Status
      type: string
    - description: Primary pod
      jsonPath: .status.currentPrimary
      name: Primary
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the PostgreSQL API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the desired behavior of the cluster. More
              info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              affinity:
                description: Affinity/Anti-affinity rules for Pods
                properties:
                  enablePodAntiAffinity:
                    description: Activates anti-affinity for the pods. The operator
                      will define pods anti-affinity unless this field is explicitly
                      set to false
                    type: boolean
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: 'NodeSelector is map of key-value pairs used to define
                      the nodes on which the pods can run. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                    type: object
                  tolerations:
                    description: 'Tolerations is a list of Tolerations that should
                      be set for all the pods, in order to allow them to run on tainted
                      nodes. More info: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/'
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologyKey:
                    description: TopologyKey to use for anti-affinity configuration.
                      See k8s documentation for more info on that
                    type: string
                type: object
              backup:
                description: The configuration to be used for backups
                properties:
                  barmanObjectStore:
                    description: The configuration for the barman-cloud tool suite
                    properties:
                      data:
                        description: The configuration to be used to backup the data
                          files When not defined, base backups files will be stored
                          uncompressed and may be unencrypted in the object store,
                          according to the bucket default policy.
                        properties:
                          compression:
                            description: Compress a backup file (a tar file per tablespace)
                              while streaming it to the object store. Available options
                              are empty string (no compression, default), `gzip` or
                              `bzip2`.
                            enum:
                            - gzip
                            - bzip2
                            type: string
                          encryption:
                            description: Whenever to force the encryption of files
                              (if the bucket is not already configured for that).
                              Allowed options are empty string (use the bucket policy,
                              default), `AES256` and `aws:kms`
                            enum:
                            - AES256
                            - aws:kms
                            type: string
                          immediateCheckpoint:
                            description: Control whether the I/O workload for the
                              backup initial checkpoint will be limited, according
                              to the `checkpoint_completion_target` setting on the
                              PostgreSQL server. If set to true, an immediate checkpoint
                              will be used, meaning PostgreSQL will complete the checkpoint
                              as soon as possible. `false` by default.
                            type: boolean
                          jobs:
                            description: The number of parallel jobs to be used to
                              upload the backup, defaults to 2
                            format: int32
                            minimum: 1
                            type: integer
                        type: object
                      destinationPath:
                        description: The path where to store the backup (i.e. s3://bucket/path/to/folder)
                          this path, with different destination folders, will be used
                          for WALs and for data
                        minLength: 1
                        type: string
                      endpointURL:
                        description: Endpoint to be used to upload data to the cloud,
                          overriding the automatic endpoint discovery
                        type: string
                      s3Credentials:
                        description: The credentials to use to upload data to S3
                        properties:
                          accessKeyId:
                            description: The reference to the access key id
                            properties:
                              key:
                                description: The key to select
                                type: string
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          secretAccessKey:
                            description: The reference to the secret access key
                            properties:
                              key:
                                description: The key to select
                                type: string
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                        required:
                        - accessKeyId
                        - secretAccessKey
                        type: object
                      serverName:
                        description: The server name on S3, the cluster name is used
                          if this parameter is omitted
                        type: string
                      wal:
                        description: The configuration for the backup of the WAL stream.
                          When not defined, WAL files will be stored uncompressed
                          and may be unencrypted in the object store, according to
                          the bucket default policy.
                        properties:
                          compression:
                            description: Compress a WAL file before sending it to
                              the object store. Available options are empty string
                              (no compression, default), `gzip` or `bzip2`.
                            enum:
                            - gzip
                            - bzip2
                            type: string
                          encryption:
                            description: Whenever to force the encryption of files
                              (if the bucket is not already configured for that).
                              Allowed options are empty string (use the bucket policy,
                              default), `AES256` and `aws:kms`
                            enum:
                            - AES256
                            - aws:kms
                            type: string
                        type: object
                    required:
                    - destinationPath
                    - s3Credentials
                    type: object
                type: object
              bootstrap:
                description: Instructions to bootstrap this cluster
                properties:
                  initdb:
                    description: Bootstrap the cluster via initdb
                    properties:
                      database:
                        description: 'Name of the database used by the application.
                          Default: `app`.'
                        type: string
                      options:
                        description: The list of options that must be passed to initdb
                          when creating the cluster
                        items:
                          type: string
                        type: array
                      owner:
                        description: Name of the owner of the database in the instance
                          to be used by applications. Defaults to the value of the
                          `database` key.
                        type: string
                      secret:
                        description: Name of the secret containing the initial credentials
                          for the owner of the user database. If empty a new secret
                          will be created from scratch
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                  pg_basebackup:
                    description: Bootstrap the cluster taking a physical backup of
                      another compatible PostgreSQL instance
                    properties:
                      source:
                        description: The name of the server of which we need to take
                          a physical backup
                        minLength: 1
                        type: string
                    required:
                    - source
                    type: object
                  recovery:
                    description: Bootstrap the cluster from a backup
                    properties:
                      backup:
                        description: The backup we need to restore
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      recoveryTarget:
                        description: 'By default, the recovery process applies all
                          the available WAL files in the archive (full recovery).
                          However, you can also end the recovery as soon as a consistent
                          state is reached or recover to a point-in-time (PITR) by
                          specifying a `RecoveryTarget` object, as expected by PostgreSQL
                          (i.e., timestamp, transaction Id, LSN, ...). More info:
                          https://www.postgresql.org/docs/current/runtime-config-wal.html#RUNTIME-CONFIG-WAL-RECOVERY-TARGET'
                        properties:
                          exclusive:
                            description: Set the target to be exclusive (defaults
                              to true)
                            type: boolean
                          targetImmediate:
                            description: End recovery as soon as a consistent state
                              is reached
                            type: boolean
                          targetLSN:
                            description: The target LSN (Log Sequence Number)
                            type: string
                          targetName:
                            description: The target name (to be previously created
                              with `pg_create_restore_point`)
                            type: string
                          targetTLI:
                            description: The target timeline ("latest", "current"
                              or a positive integer)
                            type: string
                          targetTime:
                            description: The target time, in any unambiguous representation
                              allowed by PostgreSQL
                            type: string
                          targetXID:
                            description: The target transaction ID
                            type: string
                        type: object
                    required:
                    - backup
                    type: object
                type: object
              certificates:
                description: The configuration for the CA and related certificates
                properties:
                  serverAltDNSNames:
                    description: The list of the server alternative DNS names to be
                      added to the generated server TLS certificates, when required.
                    items:
                      type: string
                    type: array
                  serverCASecret:
                    description: "The secret containing the Server CA certificate.
                      If not defined, a new secret will be created with a self-signed
                      CA and will be used to generate the TLS certificate ServerTLSSecret.
                      \n Contains: \n - `ca.crt`: CA that should be used to validate
                      the server certificate,    used as `sslrootcert` in client connection
                      strings. - `ca.key`: key used to generate Server SSL certs,
                      if ServerTLSSecret is provided,    this can be omitted."
                    type: string
                  serverTLSSecret:
                    description: The secret of type kubernetes.io/tls containing the
                      server TLS certificate and key that will be set as `ssl_cert_file`
                      and `ssl_key_file` so that clients can connect to postgres securely.
                      If not defined, ServerCASecret must provide also `ca.key` and
                      a new secret will be created using the provided CA.
                    type: string
                type: object
              description:
                description: Description of this PostgreSQL cluster
                type: string
              externalClusters:
                description: The list of external clusters which are used in the configuration
                items:
                  description: ExternalCluster represents the connection parameters
                    of an external server which is used in the cluster configuration
                  properties:
                    connectionParameters:
                      additionalProperties:
                        type: string
                      description: The list of connection parameters, such as dbname,
                        host, username, etc
                      type: object
                    name:
                      description: The server name, required
                      type: string
                    password:
                      description: The reference to the password to be used to connect
                        to the server
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    sslCert:
                      description: The reference to an SSL certificate to be used
                        to connect to this instance
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    sslKey:
                      description: The reference to an SSL private key to be used
                        to connect to this instance
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    sslRootCert:
                      description: The reference to an SSL CA public key to be used
                        to connect to this instance
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                  required:
                  - name
                  type: object
                type: array
              imageName:
                description: Name of the container image, supporting both tags (`<image>:<tag>`)
                  and digests for deterministic and repeatable deployments (`<image>:<tag>@sha256:<digestValue>`)
                type: string
              imagePullSecrets:
                description: The list of pull secrets to be used to pull the images
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate a local object with a known type inside the same
                    namespace
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              instances:
                description: Number of instances required in the cluster
                format: int32
                minimum: 1
                type: integer
              maxSyncReplicas:
                description: The target value for the synchronous replication quorum,
                  that can be decreased if the number of ready standbys is lower than
                  this. Undefined or 0 disable synchronous replication.
                format: int32
                type: integer
              minSyncReplicas:
                description: Minimum number of instances required in synchronous replication
                  with the primary. Undefined or 0 allow writes to complete when no
                  standby is available.
                format: int32
                type: integer
              monitoring:
                description: The configuration of the monitoring infrastructure of
                  this cluster
                properties:
                  customQueriesConfigMap:
                    description: The list of config maps containing the custom queries
                    items:
                      description: ConfigMapKeySelector contains enough information
                        to let you locate the key of a ConfigMap
                      properties:
                        key:
                          description: The key to select
                          type: string
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type: array
                  customQueriesSecret:
                    description: The list of secrets containing the custom queries
                    items:
                      description: SecretKeySelector contains enough information to
                        let you locate the key of a Secret
                      properties:
                        key:
                          description: The key to select
                          type: string
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type: array
                type: object
              nodeMaintenanceWindow:
                description: Define a maintenance window for the Kubernetes nodes
                properties:
                  inProgress:
                    description: Is there a node maintenance activity in progress?
                    type: boolean
                  reusePVC:
                    description: Reuse the existing PVC (wait for the node to come
                      up again) or not (recreate it elsewhere)
                    type: boolean
                required:
                - inProgress
                type: object
              postgresGID:
                description: The GID of the `postgres` user inside the image, defaults
                  to `26`
                format: int64
                type: integer
              postgresUID:
                description: The UID of the `postgres` user inside the image, defaults
                  to `26`
                format: int64
                type: integer
              postgresql:
                description: Configuration of the PostgreSQL server
                properties:
                  parameters:
                    additionalProperties:
                      type: string
                    description: PostgreSQL configuration options (postgresql.conf)
                    type: object
                  pg_hba:
                    description: PostgreSQL Host Based Authentication rules (lines
                      to be appended to the pg_hba.conf file)
                    items:
                      type: string
                    type: array
                type: object
              primaryUpdateStrategy:
                description: 'Strategy to follow to upgrade the primary server during
                  a rolling update procedure, after all replicas have been successfully
                  updated: it can be automated (`unsupervised` - default) or manual
                  (`supervised`)'
                type: string
              resources:
                description: Resources requirements of every generated Pod. Please
                  refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  for more information.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              startDelay:
                description: The time in seconds that is allowed for a PostgreSQL
                  instance to successfully start up (default 30)
                format: int32
                type: integer
              stopDelay:
                description: The time in seconds that is allowed for a PostgreSQL
                  instance node to gracefully shutdown (default 30)
                format: int32
                type: integer
              storage:
                description: Configuration of the storage of the instances
                properties:
                  pvcTemplate:
                    description: Template to be used to generate the Persistent Volume
                      Claim
                    properties:
                      accessModes:
                        description: 'AccessModes contains the desired access modes
                          the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                        items:
                          type: string
                        type: array
                      dataSource:
                        description: 'This field can be used to specify either: *
                          An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                          * An existing PVC (PersistentVolumeClaim) * An existing
                          custom resource that implements data population (Alpha)
                          In order to use custom resource types that implement data
                          population, the AnyVolumeDataSource feature gate must be
                          enabled. If the provisioner or an external controller can
                          support the specified data source, it will create a new
                          volume based on the contents of the specified data source.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      resources:
                        description: 'Resources represents the minimum resources the
                          volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      selector:
                        description: A label query over volumes to consider for binding.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      storageClassName:
                        description: 'Name of the StorageClass required by the claim.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                        type: string
                      volumeMode:
                        description: volumeMode defines what type of volume is required
                          by the claim. Value of Filesystem is implied when not included
                          in claim spec.
                        type: string
                      volumeName:
                        description: VolumeName is the binding reference to the PersistentVolume
                          backing this claim.
                        type: string
                    type: object
                  resizeInUseVolumes:
                    description: Resize existent PVCs, defaults to true
                    type: boolean
                  size:
                    description: Size of the storage. Required if not already specified
                      in the PVC template. Changes to this field are automatically
                      reapplied to the created PVCs. Size cannot be decreased.
                    type: string
                  storageClass:
                    description: StorageClass to use for database data (`PGDATA`).
                      Applied after evaluating the PVC template, if available. If
                      not specified, generated PVCs will be satisfied by the default
                      storage class
                    type: string
                required:
                - size
                type: object
              superuserSecret:
                description: The secret containing the superuser password. If not
                  defined a new secret will be created with a randomly generated password
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                required:
                - name
                type: object
            required:
            - instances
            type: object
          status:
            description: 'Most recently observed status of the cluster. This data
              may not be up to date. Populated by the system. Read-only. More info:
              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              certificates:
                description: The configuration for the CA and related certificates,
                  initialized with defaults.
                properties:
                  clientCASecret:
                    description: "The secret containing the Client CA certificate.
                      This secret contains a self-signed CA and is used to sign TLS
                      certificates used for client authentication. \n Contains: \n
                      - `ca.crt`: CA that should be used to validate the client certificate,
                      used as `ssl_ca_file`. - `ca.key`: key used to sign client SSL
                      certs."
                    type: string
                  expirations:
                    additionalProperties:
                      type: string
                    description: Expiration dates for all certificates.
                    type: object
                  replicationTLSSecret:
                    description: The secret of type kubernetes.io/tls containing the
                      TLS client certificate to authenticate as `streaming_replica`
                      user.
                    type: string
                  serverAltDNSNames:
                    description: The list of the server alternative DNS names to be
                      added to the generated server TLS certificates, when required.
                    items:
                      type: string
                    type: array
                  serverCASecret:
                    description: "The secret containing the Server CA certificate.
                      If not defined, a new secret will be created with a self-signed
                      CA and will be used to generate the TLS certificate ServerTLSSecret.
                      \n Contains: \n - `ca.crt`: CA that should be used to validate
                      the server certificate,    used as `sslrootcert` in client connection
                      strings. - `ca.key`: key used to generate Server SSL certs,
                      if ServerTLSSecret is provided,    this can be omitted."
                    type: string
                  serverTLSSecret:
                    description: The secret of type kubernetes.io/tls containing the
                      server TLS certificate and key that will be set as `ssl_cert_file`
                      and `ssl_key_file` so that clients can connect to postgres securely.
                      If not defined, ServerCASecret must provide also `ca.key` and
                      a new secret will be created using the provided CA.
                    type: string
                type: object
              currentPrimary:
                description: Current primary instance
                type: string
              danglingPVC:
                description: List of all the PVCs created by this cluster and still
                  available which are not attached to a Pod
                items:
                  type: string
                type: array
              initializingPVC:
                description: List of all the PVCs that are being initialized by this
                  cluster
                items:
                  type: string
                type: array
              instances:
                description: Total number of instances in the cluster
                format: int32
                type: integer
              instancesStatus:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: Instances status
                type: object
              jobCount:
                description: How many Jobs have been created by this cluster
                format: int32
                type: integer
              latestGeneratedNode:
                description: ID of the latest generated node (used to avoid node name
                  clashing)
                format: int32
                type: integer
              phase:
                description: Current phase of the cluster
                type: string
              phaseReason:
                description: Reason for the current phase
                type: string
              pvcCount:
                description: How many PVCs have been created by this cluster
                format: int32
                type: integer
              readService:
                description: Current list of read pods
                type: string
              readyInstances:
                description: Total number of ready instances in the cluster
                format: int32
                type: integer
              secretsResourceVersion:
                description: The list of resource versions of the secrets managed
                  by the operator. Every change here is done in the interest of the
                  instance manager, which will refresh the secret data
                properties:
                  applicationSecretVersion:
                    description: The resource version of the "app" user secret
                    type: string
                  caSecretVersion:
                    description: Unused. Retained for compatibility with old versions.
                    type: string
                  clientCaSecretVersion:
                    description: The resource version of the PostgreSQL client-side
                      CA secret version
                    type: string
                  replicationSecretVersion:
                    description: The resource version of the "streaming_replication"
                      user secret
                    type: string
                  serverCaSecretVersion:
                    description: The resource version of the PostgreSQL server-side
                      CA secret version
                    type: string
                  serverSecretVersion:
                    description: The resource version of the PostgreSQL server-side
                      secret version
                    type: string
                  superuserSecretVersion:
                    description: The resource version of the "postgres" user secret
                    type: string
                type: object
              targetPrimary:
                description: Target primary instance, this is different from the previous
                  one during a switchover or a failover
                type: string
              writeService:
                description: Current write pod
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        specReplicasPath: .spec.instances
        statusReplicasPath: .status.instances
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Number of instances
      jsonPath: .status.instances
      name: Instances
      type: integer
    - description: Number of ready instances
      jsonPath: .status.readyInstances
      name: Ready
      type: integer
    - description: Cluster current status
      jsonPath: .status.phase
      name: Status
      type: string
    - description: Primary pod
      jsonPath: .status.currentPrimary
      name: Primary
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the PostgreSQL API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the desired behavior of the cluster. More
              info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              affinity:
                description: Affinity/Anti-affinity rules for Pods
                properties:
                  enablePodAntiAffinity:
                    description: Activates anti-affinity for the pods. The operator
                      will define pods anti-affinity unless this field is explicitly
                      set to false
                    type: boolean
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: 'NodeSelector is map of key-value pairs used to define
                      the nodes on which the pods can run. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                    type: object
                  tolerations:
                    description: 'Tolerations is a list of Tolerations that should
                      be set to all the pods for this cluster. More info: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/'
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologyKey:
                    description: TopologyKey to use for anti-affinity configuration.
                      See k8s documentation for more info on that
                    type: string
                type: object
              backup:
                description: The configuration to be used for backups
                properties:
                  barmanObjectStore:
                    description: The configuration for the barman-cloud tool suite
                    properties:
                      data:
                        description: The configuration to be used to backup the data
                          files When not defined, base backups files will be stored
                          uncompressed and may be unencrypted in the object store,
                          according to the bucket default policy.
                        properties:
                          compression:
                            description: Compress a backup file (a tar file per tablespace)
                              while streaming it to the object store. Available options
                              are empty string (no compression, default), `gzip` or
                              `bzip2`.
                            type: string
                          encryption:
                            description: Whenever to force the encryption of files
                              (if the bucket is not already configured for that).
                              Allowed options are empty string (use the bucket policy,
                              default), `AES256` and `aws:kms`
                            type: string
                          immediateCheckpoint:
                            description: Control whether the I/O workload for the
                              backup initial checkpoint will be limited, according
                              to the `checkpoint_completion_target` setting on the
                              PostgreSQL server. If set to true, an immediate checkpoint
                              will be used, meaning PostgreSQL will complete the checkpoint
                              as soon as possible. `false` by default.
                            type: boolean
                          jobs:
                            description: The number of parallel jobs to be used to
                              upload the backup, defaults to 2
                            format: int32
                            type: integer
                        type: object
                      destinationPath:
                        description: The path where to store the backup (i.e. s3://bucket/path/to/folder)
                          this path, with different destination folders, will be used
                          for WALs and for data
                        minLength: 1
                        type: string
                      endpointURL:
                        description: Endpoint to be used to upload data to the cloud,
                          overriding the automatic endpoint discovery
                        type: string
                      s3Credentials:
                        description: The credentials to use to upload data to S3
                        properties:
                          accessKeyId:
                            description: The reference to the access key id
                            properties:
                              key:
                                description: The key to select
                                type: string
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          secretAccessKey:
                            description: The reference to the secret access key
                            properties:
                              key:
                                description: The key to select
                                type: string
                              name:
                                description: Name of the referent.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                        required:
                        - accessKeyId
                        - secretAccessKey
                        type: object
                      serverName:
                        description: The server name on S3, the cluster name is used
                          if this parameter is omitted
                        type: string
                      wal:
                        description: The configuration for the backup of the WAL stream.
                          When not defined, WAL files will be stored uncompressed
                          and may be unencrypted in the object store, according to
                          the bucket default policy.
                        properties:
                          compression:
                            description: Compress a WAL file before sending it to
                              the object store. Available options are empty string
                              (no compression, default), `gzip` or `bzip2`.
                            type: string
                          encryption:
                            description: Whenever to force the encryption of files
                              (if the bucket is not already configured for that).
                              Allowed options are empty string (use the bucket policy,
                              default), `AES256` and `aws:kms`
                            type: string
                        type: object
                    required:
                    - destinationPath
                    - s3Credentials
                    type: object
                type: object
              bootstrap:
                description: Instructions to bootstrap this cluster
                properties:
                  initdb:
                    description: Bootstrap the cluster via initdb
                    properties:
                      database:
                        description: 'Name of the database used by the application.
                          Default: `app`.'
                        type: string
                      options:
                        description: The list of options that must be passed to initdb
                          when creating the cluster
                        items:
                          type: string
                        type: array
                      owner:
                        description: Name of the owner of the database in the instance
                          to be used by applications. Defaults to the value of the
                          `database` key.
                        type: string
                      secret:
                        description: Name of the secret containing the initial credentials
                          for the owner of the user database. If empty a new secret
                          will be created from scratch
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                    type: object
                  pg_basebackup:
                    description: Bootstrap the cluster taking a physical backup of
                      another compatible PostgreSQL instance
                    properties:
                      source:
                        description: The name of the server of which we need to take
                          a physical backup
                        minLength: 1
                        type: string
                    required:
                    - source
                    type: object
                  recovery:
                    description: Bootstrap the cluster from a backup
                    properties:
                      backup:
                        description: The backup we need to restore
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                        - name
                        type: object
                      recoveryTarget:
                        description: 'By default, the recovery will end as soon as
                          a consistent state is reached: in this case, that means
                          at the end of a backup. This option allows to fine tune
                          the recovery process'
                        properties:
                          exclusive:
                            description: Set the target to be exclusive (defaults
                              to true)
                            type: boolean
                          targetImmediate:
                            description: End recovery as soon as a consistent state
                              is reached
                            type: boolean
                          targetLSN:
                            description: The target LSN (Log Sequence Number)
                            type: string
                          targetName:
                            description: The target name (to be previously created
                              with `pg_create_restore_point`)
                            type: string
                          targetTLI:
                            description: The target timeline ("latest", "current"
                              or a positive integer)
                            type: string
                          targetTime:
                            description: The target time, in any unambiguous representation
                              allowed by PostgreSQL
                            type: string
                          targetXID:
                            description: The target transaction ID
                            type: string
                        type: object
                    required:
                    - backup
                    type: object
                type: object
              certificates:
                description: The configuration for the CA and related certificates
                properties:
                  serverAltDNSNames:
                    description: The list of the server alternative DNS names to be
                      added to the generated server TLS certificates, when required.
                    items:
                      type: string
                    type: array
                  serverCASecret:
                    description: "The secret containing the Server CA certificate.
                      If not defined, a new secret will be created with a self-signed
                      CA and will be used to generate the TLS certificate ServerTLSSecret.
                      \n Contains: \n - `ca.crt`: CA that should be used to validate
                      the server certificate,   used as `sslrootcert` in client connection
                      strings. - `ca.key`: key used to generate Server SSL certs,
                      if ServerTLSSecret is provided,   this can be omitted."
                    type: string
                  serverTLSSecret:
                    description: The secret of type kubernetes.io/tls containing the
                      server TLS certificate and key that will be set as `ssl_cert_file`
                      and `ssl_key_file` so that clients can connect to postgres securely.
                      If not defined, ServerCASecret must provide also `ca.key` and
                      a new secret will be created using the provided CA.
                    type: string
                type: object
              description:
                description: Description of this PostgreSQL cluster
                type: string
              externalClusters:
                description: The list of external server which are used in the cluster
                  configuration
                items:
                  description: ExternalCluster represent the connection parameters
                    to an external server which is used in the cluster configuration
                  properties:
                    connectionParameters:
                      additionalProperties:
                        type: string
                      description: The list of connection parameters, such as dbname,
                        host, username, etc
                      type: object
                    name:
                      description: The server name, required
                      type: string
                    password:
                      description: The reference to the password to be used to connect
                        to the server
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    sslCert:
                      description: The reference to an SSL certificate to be used
                        to connect to this instance
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    sslKey:
                      description: The reference to an SSL private key to be used
                        to connect to this instance
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    sslRootCert:
                      description: The reference to an SSL CA public key to be used
                        to connect to this instance
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                  required:
                  - name
                  type: object
                type: array
              imageName:
                description: Name of the container image
                type: string
              imagePullSecrets:
                description: The list of pull secrets to be used to pull the images
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate a local object with a known type inside the same
                    namespace
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                  - name
                  type: object
                type: array
              instances:
                description: Number of instances required in the cluster
                format: int32
                minimum: 1
                type: integer
              maxSyncReplicas:
                description: The target value for the synchronous replication quorum,
                  that can be decreased if the number of ready standbys is lower than
                  this. Undefined or 0 disable synchronous replication.
                format: int32
                type: integer
              minSyncReplicas:
                description: Minimum number of instances required in synchronous replication
                  with the primary. Undefined or 0 allow writes to complete when no
                  standby is available.
                format: int32
                type: integer
              monitoring:
                description: The configuration of the monitoring infrastructure of
                  this cluster
                properties:
                  customQueriesConfigMap:
                    description: The list of config maps containing the custom queries
                    items:
                      description: ConfigMapKeySelector contains enough information
                        to let you locate key of a ConfigMap
                      properties:
                        key:
                          description: The key to select
                          type: string
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type: array
                  customQueriesSecret:
                    description: The list of secrets containing the custom queries
                    items:
                      description: SecretKeySelector contains enough information to
                        let you locate key of a Secret
                      properties:
                        key:
                          description: The key to select
                          type: string
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type: array
                type: object
              nodeMaintenanceWindow:
                description: Define a maintenance window for the Kubernetes nodes
                properties:
                  inProgress:
                    description: Is there a node maintenance activity in progress?
                    type: boolean
                  reusePVC:
                    description: Reuse the existing PVC (wait for the node to come
                      up again) or not (recreate it elsewhere)
                    type: boolean
                required:
                - inProgress
                type: object
              postgresGID:
                description: The GID of the `postgres` user inside the image, defaults
                  to `26`
                format: int64
                type: integer
              postgresUID:
                description: The UID of the `postgres` user inside the image, defaults
                  to `26`
                format: int64
                type: integer
              postgresql:
                description: Configuration of the PostgreSQL server
                properties:
                  parameters:
                    additionalProperties:
                      type: string
                    description: PostgreSQL configuration options (postgresql.conf)
                    type: object
                  pg_hba:
                    description: PostgreSQL Host Based Authentication rules (lines
                      to be appended to the pg_hba.conf file)
                    items:
                      type: string
                    type: array
                type: object
              primaryUpdateStrategy:
                description: 'Strategy to follow to upgrade the primary server during
                  a rolling update procedure, after all replicas have been successfully
                  updated: it can be automated (`unsupervised` - default) or manual
                  (`supervised`)'
                type: string
              resources:
                description: Resources requirements of every generated Pod. Please
                  refer to https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  for more information.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              startDelay:
                description: The time in seconds that is allowed for a PostgreSQL
                  instance to successfully start up (default 30)
                format: int32
                type: integer
              stopDelay:
                description: The time in seconds that is allowed for a PostgreSQL
                  instance node to gracefully shutdown (default 30)
                format: int32
                type: integer
              storage:
                description: Configuration of the storage of the instances
                properties:
                  pvcTemplate:
                    description: Template to be used to generate the Persistent Volume
                      Claim
                    properties:
                      accessModes:
                        description: 'AccessModes contains the desired access modes
                          the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                        items:
                          type: string
                        type: array
                      dataSource:
                        description: 'This field can be used to specify either: *
                          An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                          * An existing PVC (PersistentVolumeClaim) * An existing
                          custom resource that implements data population (Alpha)
                          In order to use custom resource types that implement data
                          population, the AnyVolumeDataSource feature gate must be
                          enabled. If the provisioner or an external controller can
                          support the specified data source, it will create a new
                          volume based on the contents of the specified data source.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      resources:
                        description: 'Resources represents the minimum resources the
                          volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      selector:
                        description: A label query over volumes to consider for binding.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      storageClassName:
                        description: 'Name of the StorageClass required by the claim.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                        type: string
                      volumeMode:
                        description: volumeMode defines what type of volume is required
                          by the claim. Value of Filesystem is implied when not included
                          in claim spec.
                        type: string
                      volumeName:
                        description: VolumeName is the binding reference to the PersistentVolume
                          backing this claim.
                        type: string
                    type: object
                  resizeInUseVolumes:
                    description: Resize existent PVCs, defaults to true
                    type: boolean
                  size:
                    description: Size of the storage. Required if not already specified
                      in the PVC template. Changes to this field are automatically
                      reapplied to the created PVCs. Size cannot be decreased.
                    type: string
                  storageClass:
                    description: StorageClass to use for database data (`PGDATA`).
                      Applied after evaluating the PVC template, if available. If
                      not specified, generated PVCs will be satisfied by the default
                      storage class
                    type: string
                required:
                - size
                type: object
              superuserSecret:
                description: The secret containing the superuser password. If not
                  defined, a new secret will be created with a randomly generated
                  password
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                required:
                - name
                type: object
            required:
            - instances
            type: object
          status:
            description: 'Most recently observed status of the cluster. This data
              may not be up to date. Populated by the system. Read-only. More info:
              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              certificates:
                description: The configuration for the CA and related certificates,
                  initialized with defaults.
                properties:
                  clientCASecret:
                    description: "The secret containing the Client CA certificate.
                      This secret contains a self-signed CA and is used to sign TLS
                      certificates used for client authentication. \n Contains: \n
                      - `ca.crt`: CA that should be used to validate the client certificate,
                      used as `ssl_ca_file`. - `ca.key`: key used to sign client SSL
                      certs."
                    type: string
                  expirations:
                    additionalProperties:
                      type: string
                    description: Expiration dates for all certificates.
                    type: object
                  replicationTLSSecret:
                    description: The secret of type kubernetes.io/tls containing the
                      TLS client certificate to authenticate as `streaming_replica`
                      user.
                    type: string
                  serverAltDNSNames:
                    description: The list of the server alternative DNS names to be
                      added to the generated server TLS certificates, when required.
                    items:
                      type: string
                    type: array
                  serverCASecret:
                    description: "The secret containing the Server CA certificate.
                      If not defined, a new secret will be created with a self-signed
                      CA and will be used to generate the TLS certificate ServerTLSSecret.
                      \n Contains: \n - `ca.crt`: CA that should be used to validate
                      the server certificate,   used as `sslrootcert` in client connection
                      strings. - `ca.key`: key used to generate Server SSL certs,
                      if ServerTLSSecret is provided,   this can be omitted."
                    type: string
                  serverTLSSecret:
                    description: The secret of type kubernetes.io/tls containing the
                      server TLS certificate and key that will be set as `ssl_cert_file`
                      and `ssl_key_file` so that clients can connect to postgres securely.
                      If not defined, ServerCASecret must provide also `ca.key` and
                      a new secret will be created using the provided CA.
                    type: string
                type: object
              currentPrimary:
                description: Current primary instance
                type: string
              danglingPVC:
                description: List of all the PVCs created by this cluster and still
                  available which are not attached to a Pod
                items:
                  type: string
                type: array
              instances:
                description: Total number of instances in the cluster
                format: int32
                type: integer
              instancesStatus:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: Instances status
                type: object
              jobCount:
                description: How many Jobs have been created by this cluster
                format: int32
                type: integer
              latestGeneratedNode:
                description: ID of the latest generated node (used to avoid node name
                  clashing)
                format: int32
                type: integer
              phase:
                description: Current phase of the cluster
                type: string
              phaseReason:
                description: Reason for the current phase
                type: string
              pvcCount:
                description: How many PVCs have been created by this cluster
                format: int32
                type: integer
              readService:
                description: Current list of read pods
                type: string
              readyInstances:
                description: Total number of ready instances in the cluster
                format: int32
                type: integer
              secretsResourceVersion:
                description: The list of resource versions of the secrets managed
                  by the operator. Every change here is done in the interest of the
                  instance manager, which will refresh the secret data
                properties:
                  applicationSecretVersion:
                    description: The resource version of the "app" user secret
                    type: string
                  caSecretVersion:
                    description: Unused. Retained for compatibility with old versions.
                    type: string
                  clientCaSecretVersion:
                    description: The resource version of the PostgreSQL client-side
                      CA secret version
                    type: string
                  replicationSecretVersion:
                    description: The resource version of the "streaming_replication"
                      user secret
                    type: string
                  serverCaSecretVersion:
                    description: The resource version of the PostgreSQL server-side
                      CA secret version
                    type: string
                  serverSecretVersion:
                    description: The resource version of the PostgreSQL server-side
                      secret version
                    type: string
                  superuserSecretVersion:
                    description: The resource version of the "postgres" user secret
                    type: string
                required:
                - applicationSecretVersion
                - clientCaSecretVersion
                - replicationSecretVersion
                - serverCaSecretVersion
                - serverSecretVersion
                - superuserSecretVersion
                type: object
              targetPrimary:
                description: Target primary instance, this is different from the previous
                  one during a switchover or a failover
                type: string
              writeService:
                description: Current write pod
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      scale:
        specReplicasPath: .spec.instances
        statusReplicasPath: .status.instances
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
