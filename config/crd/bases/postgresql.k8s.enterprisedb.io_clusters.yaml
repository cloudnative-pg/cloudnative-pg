
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: clusters.postgresql.k8s.enterprisedb.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .status.instances
    description: Number of instances
    name: Instances
    type: integer
  - JSONPath: .status.readyInstances
    description: Number of ready instances
    name: Ready
    type: integer
  - JSONPath: .status.phase
    description: Cluster current status
    name: Status
    type: string
  - JSONPath: .status.currentPrimary
    description: Primary pod
    name: Primary
    type: string
  group: postgresql.k8s.enterprisedb.io
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  subresources:
    scale:
      specReplicasPath: .spec.instances
      statusReplicasPath: .status.instances
    status: {}
  validation:
    openAPIV3Schema:
      description: Cluster is the Schema for the postgresql API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterSpec defines the desired state of Cluster
          properties:
            affinity:
              description: Affinity/Anti-affinity rules for Pods
              properties:
                enablePodAntiAffinity:
                  description: Should we enable anti affinity or not?
                  type: boolean
                topologyKey:
                  description: TopologyKey to use for anti-affinity configuration.
                    See k8s documentation for more info on that
                  type: string
              required:
              - enablePodAntiAffinity
              type: object
            backup:
              description: The configuration to be used for backups
              properties:
                barmanObjectStore:
                  description: The configuration for the barman-cloud tool suite
                  properties:
                    data:
                      description: The configuration to be used to backup the data
                        files
                      properties:
                        compression:
                          description: Whenever to compress files or not
                          type: string
                        encryption:
                          description: Whenever to force the encryption of files (if
                            the bucket is not already configured for that)
                          type: string
                        immediateCheckpoint:
                          description: Whenever to force the initial checkpoint to
                            be done as quickly as possible
                          type: boolean
                        jobs:
                          description: The number of jobs to be used to upload the
                            backup, defaults to 2
                          format: int32
                          type: integer
                      type: object
                    destinationPath:
                      description: The path where to store the backup (i.e. s3://bucket/path/to/folder)
                        this path, with different destination folders, will be used
                        for WALs and for data
                      minLength: 1
                      type: string
                    endpointURL:
                      description: Endpoint to be used to upload data to the cloud,
                        overriding the automatic endpoint discovery
                      type: string
                    s3Credentials:
                      description: The credentials to use to upload data to S3
                      properties:
                        accessKeyId:
                          description: The reference to the access key id
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secretAccessKey:
                          description: The reference to the secret access key
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      required:
                      - accessKeyId
                      - secretAccessKey
                      type: object
                    serverName:
                      description: The server name on S3, the cluster name is used
                        if this parameter is omitted
                      type: string
                    wal:
                      description: The configuration for the backup of the WAL stream
                      properties:
                        compression:
                          description: Whenever to compress files or not
                          type: string
                        encryption:
                          description: Whenever to force the encryption of files (if
                            the bucket is not already configured for that)
                          type: string
                      type: object
                  required:
                  - destinationPath
                  - s3Credentials
                  type: object
              type: object
            bootstrap:
              description: Instructions to bootstrap this cluster
              properties:
                fullRecovery:
                  description: Bootstrap the cluster from a backup
                  properties:
                    backup:
                      description: The backup we need to restore
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                  required:
                  - backup
                  type: object
                initdb:
                  description: Bootstrap the cluster via initdb
                  properties:
                    database:
                      description: Name of the database used by the application.
                      type: string
                    options:
                      description: The list of options that must be passed to initdb
                        when creating the cluster
                      items:
                        type: string
                      type: array
                    owner:
                      description: Name of the owner of the database in the instance
                        to be used by applications.
                      type: string
                    secret:
                      description: Name of the secret containing the initial credentials
                        for the owner of the user database. If empty a new secret
                        will be created from scratch
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                  type: object
              type: object
            description:
              description: Description of this PostgreSQL cluster
              type: string
            imageName:
              description: Name of the container image
              minLength: 0
              type: string
            imagePullSecrets:
              description: The list of pull secrets to be used to pull the images
              items:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              type: array
            instances:
              description: Number of instances required in the cluster
              format: int32
              minimum: 1
              type: integer
            nodeMaintenanceWindow:
              description: Define a maintenance window for the Kubernetes nodes
              properties:
                inProgress:
                  description: Is there a node maintenance activity in progress?
                  type: boolean
                reusePVC:
                  description: Reuse the existing PVC (wait for the node to come up
                    again) or not (recreate it elsewhere)
                  type: boolean
              required:
              - inProgress
              type: object
            postgresGID:
              description: The GID of the "postgres" user inside the image, defaults
                to "26"
              format: int64
              type: integer
            postgresUID:
              description: The UID of the "postgres" user inside the image, defaults
                to "26"
              format: int64
              type: integer
            postgresql:
              description: Configuration of the PostgreSQL server
              properties:
                parameters:
                  additionalProperties:
                    type: string
                  description: PostgreSQL configuration options (postgresql.conf)
                  type: object
                pg_hba:
                  description: PostgreSQL Host Based Authentication rules (lines to
                    be appended to the pg_hba.conf file)
                  items:
                    type: string
                  type: array
              type: object
            primaryUpdateStrategy:
              description: 'Strategy to follow to upgrade the primary server during
                a rolling update procedure, after all replicas have been successfully
                updated: it can be automated (`unsupervised` - default) or manual
                (`supervised`)'
              type: string
            resources:
              description: Resources requirements of every generated Pod
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            startDelay:
              description: The time in seconds that is allowed for a PostgreSQL instance
                to successfully start up (default 30)
              format: int32
              type: integer
            stopDelay:
              description: The time in seconds that is allowed for a PostgreSQL instance
                node to gracefully shutdown (default 30)
              format: int32
              type: integer
            storage:
              description: Configuration of the storage of the instances
              properties:
                pvcTemplate:
                  description: Template to be used to generate the Persistent Volume
                    Claim
                  properties:
                    accessModes:
                      description: 'AccessModes contains the desired access modes
                        the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                      items:
                        type: string
                      type: array
                    dataSource:
                      description: This field requires the VolumeSnapshotDataSource
                        alpha feature gate to be enabled and currently VolumeSnapshot
                        is the only supported data source. If the provisioner can
                        support VolumeSnapshot data source, it will create a new volume
                        and data will be restored to the volume at the same time.
                        If the provisioner does not support VolumeSnapshot data source,
                        volume will not be created and the failure will be reported
                        as an event. In the future, we plan to support more data source
                        types and the behavior of the provisioner may change.
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being
                            referenced. If APIGroup is not specified, the specified
                            Kind must be in the core API group. For any other third-party
                            types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                    resources:
                      description: 'Resources represents the minimum resources the
                        volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    selector:
                      description: A label query over volumes to consider for binding.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    storageClassName:
                      description: 'Name of the StorageClass required by the claim.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                      type: string
                    volumeMode:
                      description: volumeMode defines what type of volume is required
                        by the claim. Value of Filesystem is implied when not included
                        in claim spec. This is a beta feature.
                      type: string
                    volumeName:
                      description: VolumeName is the binding reference to the PersistentVolume
                        backing this claim.
                      type: string
                  type: object
                size:
                  description: Size of the storage. Required if not already specified
                    in the PVC template.
                  type: string
                storageClass:
                  description: StorageClass to use for database data (PGDATA). Applied
                    after evaluating the PVC template, if available. If not specified,
                    generated PVCs will be satisfied by the default storage class
                  type: string
              required:
              - size
              type: object
            superuserSecret:
              description: The secret containing the superuser password, if empty
                a new secret will be created with a randomly generated password
              properties:
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?'
                  type: string
              type: object
          required:
          - instances
          type: object
        status:
          description: ClusterStatus defines the observed state of Cluster
          properties:
            currentPrimary:
              description: Current primary instance
              type: string
            danglingPVC:
              description: List of all the PVCs created by this cluster and still
                available which are not attached to a Pod
              items:
                type: string
              type: array
            instances:
              description: Total number of instances in the cluster
              format: int32
              type: integer
            instancesStatus:
              additionalProperties:
                items:
                  type: string
                type: array
              description: Instances status
              type: object
            latestGeneratedNode:
              description: ID of the latest generated node (used to avoid node name
                clashing)
              format: int32
              type: integer
            phase:
              type: string
            phaseReason:
              type: string
            readService:
              description: Current list of read pods
              type: string
            readyInstances:
              description: Total number of ready instances in the cluster
              format: int32
              type: integer
            targetPrimary:
              description: Target primary instance, this is different from the previous
                one during a switchover or a failover
              type: string
            writeService:
              description: Current write pod
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
